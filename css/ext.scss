@charset "UTF-8";

//-----------------------------------------------------
// mixin scss
// 包括常用的mixin, %, @function 及辅助的btn和背景图片icon
// mixin，通过@include调用，样式通过拷贝的方式使用，尤其适用于传递参数
// %，通过@extend调用，样式通过组合申明的方式使用，适用于不传参数的代码片段
// @function，返回一个值，用于调用
//-----------------------------------------------------

// mixin & %
// 既定义了mixin也定义了%，根据需求使用@include或@extend调用
//-----------------------------------------------------

// Center-align a block level element
@mixin center-block($extend: true) {
  @if $extend {
    @extend %center-block;
  }
  @else {
    margin-left: auto;
    margin-right: auto;
  }
}

%center-block {
  @include center-block(false);
}

// clearfix
@mixin clearfix($extend: true) {
  @if $extend {
    @extend %clearfix;
  }
  @else {
    &:before,
    &:after {
      content: "";
      display: table;
    }
    &:after {
      clear: both;
    }
  }
}

%clearfix {
  @include clearfix(false);
}

// Hide only visually, but have it available for screenreaders
// 只隐藏于视觉，屏幕浏览器可以阅读
@mixin hidden-clip($extend: true) {
  @if $extend {
    @extend %hidden-clip;
  }
  @else {
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
  }
}

%hidden-clip {
  @include hidden-clip(false);
}

// ellipsis
@mixin ellipsis($extend: true) {
  @if $extend {
    @extend %ellipsis;
  }
  @else {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
}

%ellipsis {
  @include ellipsis(false);
}

// 只有webkit支持多行省略号
@mixin ellipsis-line($line: 2) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
}

// word-break
// 用于链接地址强制换行
@mixin word-break($extend: true) {
  @if $extend {
    @extend %word-break;
  }
  @else {
    white-space: normal;
    word-wrap: break-word;
    word-break: break-all;
  }
}

%word-break {
  @include word-break(false);
}

// disabled
// 禁用样式，加!important
@mixin disabled() {
  background-color: #ddd !important;
  color: #666 !important;
  cursor: default !important;
  pointer-events: none !important;
}

%disabled {
  @include disabled;
}

// fixed top & bottom
@mixin fixed($pos: 0) {
  position: fixed;
  left: 0;
  right: 0;
  @if $pos == bottom {
    bottom: 0;
  }
  @else {
    top: $pos;
  }
}

%fixed-top {
  @include fixed;
}

%fixed-bottom {
  @include fixed($pos: bottom);
}

// justify
@mixin justify($extend: true) {
  @if $extend {
    @extend %justify;
  }
  @else {
    display: flex;
    justify-content: space-between;
  }
}

%justify {
  @include justify(false);
}

// mixin
// 只定义了mixin，所以只能通过@include来调用
//-----------------------------------------------------



// flex center
@mixin center-flex($direction: both) {
  display: flex;
  @if $direction == both {
    justify-content: center;
    align-items: center;
  }
  @else if $direction == x {
    justify-content: center;
  }
  @else if $direction == y {
    align-items: center;
  }
}

// translate center
@mixin center-translate($direction: both) {
  position: absolute;
  @if $direction == both {
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
    -webkit-transform: translate3d(-50%, -50%, 0);
  }
  @else if $direction == x {
    left: 50%;
    transform: translate3d(-50%, 0, 0);
    -webkit-transform: translate3d(-50%, 0, 0);
  }
  @else if $direction == y {
    top: 50%;
    transform: translate3d(0, -50%, 0);
    -webkit-transform: translate3d(0, -50%, 0);
  }
}

// triangle 三角箭头
%triangle-basic {
  content: "";
  height: 0;
  width: 0;
  overflow: hidden;
}

@mixin triangle($direction: top, $borderWidth: 6px, $borderColor: #dedede) {
  @extend %triangle-basic;
  @if $direction == top {
    border-bottom: $borderWidth solid $borderColor;
    border-left: $borderWidth dashed transparent;
    border-right: $borderWidth dashed transparent;
  }
  @else if $direction == right {
    border-left: $borderWidth solid $borderColor;
    border-top: $borderWidth dashed transparent;
    border-bottom: $borderWidth dashed transparent;
  }
  @else if $direction == bottom {
    border-top: $borderWidth solid $borderColor;
    border-left: $borderWidth dashed transparent;
    border-right: $borderWidth dashed transparent;
  }
  @else if $direction == left {
    border-right: $borderWidth solid $borderColor;
    border-top: $borderWidth dashed transparent;
    border-bottom: $borderWidth dashed transparent;
  }
}

// arrow 方向箭头
@mixin arrow($size: 10px, $direction: right, $borderWidth: 2px, $borderColor: #dedede) {
  display: inline-block;
  vertical-align: middle;
  width: $size;
  height: $size;
  @if $direction == top {
    border-top: $borderWidth solid $borderColor;
    border-right: $borderWidth solid $borderColor;
    transform: rotate(-45deg);
  }
  @else if $direction == right {
    border-top: $borderWidth solid $borderColor;
    border-right: $borderWidth solid $borderColor;
    transform: rotate(45deg);
  }
  @else if $direction == bottom {
    border-left: $borderWidth solid $borderColor;
    border-bottom: $borderWidth solid $borderColor;
    transform: rotate(-45deg);
  }
  @if $direction == left {
    border-left: $borderWidth solid $borderColor;
    border-bottom: $borderWidth solid $borderColor;
    transform: rotate(45deg);
  }
}

